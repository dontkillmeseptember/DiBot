from misc.util import ReplyKeyboardMarkup, KeyboardButton, types, datetime
from misc.loader import bot, moscow_tz

from data import yml_loader
from data.admin_db import is_admin_in_data, load_admin_data
from data.start_db import check_user_data, load_user_data, save_user_data, is_user_in_data

from data.config import PHOTO_PATH, PHOTO_PATH_PREVIEW, PHOTO_REWARD

from keyboards.quest.witcherone_func import start_the_witcher_one
from keyboards.quest.witchertwo_func import start_the_witcher_two
# from keyboards.quest.witcherthree_func import start_the_witcher_three

def create_quest_keyboard(message):
	# –í—ã–≤–æ–¥–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–í–∞—à –ø—Ä–æ–≥—Ä–µ—Å—Å"
	user = message.from_user
	user_id = user.id
	user_data = check_user_data(user_id)
	battlepass = user_data.get("battlepass", "Uxknow")

	# –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –≤–∫–ª–∞–¥–∫–∞–º–∏
	keyboard = ReplyKeyboardMarkup(resize_keyboard=True)
	keyboard.row(
		KeyboardButton(yml_loader.quest_data["quest_buttons"]["awards"]),
		KeyboardButton(yml_loader.quest_data["quest_buttons"]["info"])
	)
	keyboard.add(KeyboardButton(yml_loader.quest_data["quest_buttons"]["quest"]))
	keyboard.row(
		KeyboardButton(yml_loader.main_path["main_menu"]["button_main_menu"]),
		KeyboardButton(f"üìà –í–∞—à –ø—Ä–æ–≥—Ä–µ—Å—Å ‚Äî {battlepass}")
	)

	return keyboard

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–∫–ª–∞–¥–∫–∏ "–ó–∞–¥–∞–Ω–∏—è"
async def quest_handler(message: types.Message):
	# –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è –∫–Ω–æ–ø–æ–∫
	keyboard = create_quest_keyboard(message)

	# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
	user_id = message.from_user.id
	admin_data = load_admin_data()
	
	if is_admin_in_data(user_id, admin_data):
		await bot.send_photo(message.chat.id, photo=PHOTO_PATH, caption=yml_loader.quest_data["quest"]["quest_info"], reply_markup=keyboard)
	else:
		# –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–π –¥–∞—Ç—ã –∏ –≤—Ä–µ–º–µ–Ω–∏
		current_datetime = datetime.datetime.now(moscow_tz)
		target_datetime = datetime.datetime(current_datetime.year, month=10, day=31, hour=0, minute=0, second=0)
		target_datetime = moscow_tz.localize(target_datetime)
		
		time_diff = target_datetime - current_datetime
		
		# –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –æ—Å—Ç–∞–≤—à–µ–µ—Å—è –≤—Ä–µ–º—è –¥–æ —Ü–µ–ª–µ–≤–æ–π –¥–∞—Ç—ã –∏ –≤—Ä–µ–º–µ–Ω–∏
		days = time_diff.days
		hours = time_diff.seconds // 3600
		minutes = (time_diff.seconds % 3600) // 60

		if time_diff.total_seconds() > 0:
			await bot.send_photo(message.chat.id, photo=PHOTO_PATH_PREVIEW, caption=f"<b>‚Ä¢ –ë–æ–µ–≤–æ–π –ø—Ä–æ–ø—É—Å–∫ ‚Äî {yml_loader.quest_data['quest']['button_quest']};\n 	‚Ü≥ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ —á–µ—Ä–µ–∑: <code>‚åõÔ∏è {days}–î {hours}–ß –∏ {minutes}–ú</code></b>")
		else:
			await bot.send_photo(message.chat.id, photo=PHOTO_PATH, caption=yml_loader.quest_data["quest"]["quest_info"], reply_markup=keyboard)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–∫–ª–∞–¥–∫–∏ "–í –ø—É—Ç—å!"
async def start_battlepass(message: types.Message):
	user_id = message.from_user.id
	user_data = load_user_data()

	if is_user_in_data(user_id, user_data):
		# –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –≤—ã–±—Ä–∞–Ω–Ω–∞—è —á–∞—Å—Ç—å —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
		if str(user_id) in user_data and "active_chapter" in user_data[str(user_id)]:
			selected_chapters = user_data[str(user_id)]["active_chapter"]

			if selected_chapters is None:
				await start_the_witcher_one(message)
			elif selected_chapters == "the_witcher_two":
				await start_the_witcher_two(message)
			elif selected_chapters == "the_witcher_three":
				await start_the_witcher_three(message)
	else:
		print("User not registor.")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–∫–ª–∞–¥–∫–∏ "–ù–∞–≥—Ä–∞–¥—ã –±–æ–µ–≤–æ–≥–æ –ø—Ä–æ–ø—É—Å–∫–∞"
async def info_rewards(message: types.Message):
	await bot.send_photo(message.chat.id, photo=PHOTO_REWARD, caption=yml_loader.quest_data["quest"]["reward_info"])

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–∫–ª–∞–¥–∫–∏ "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ–µ–≤–æ–º –ø—Ä–æ–ø—É—Å–∫–µ"
async def info_handler(message: types.Message):
	await bot.send_photo(message.chat.id, photo=PHOTO_PATH, caption=yml_loader.quest_data["quest"]["quest_info"])
