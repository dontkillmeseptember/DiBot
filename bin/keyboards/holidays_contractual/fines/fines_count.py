from misc.util import requests, reduce

# –í—Å–µ–≥–æ —à—Ç—Ä–∞—Ñ–æ–≤ —É –ò–≥–æ—Ä—è
# –í—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
fines_igor_one = 30000
fines_igor_two = 4700
fines_igor_three = 0
full_igor_one = 20
full_igor_two = 22
full_igor_three = 0

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–Ω–∞—á–µ–Ω–∏—è full_one
if full_igor_one > 15:
    full_igor_one += 7

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–Ω–∞—á–µ–Ω–∏—è full_two
if full_igor_two > 15:
    full_igor_two += 7
    
# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–Ω–∞—á–µ–Ω–∏—è full_igor_three
if full_igor_three > 15:
    full_igor_three += 7

# –í—ã—á–∏—Å–ª–µ–Ω–∏–µ —Å—É–º–º—ã —Å —É—á–µ—Ç–æ–º –ø—Ä–æ—Ü–µ–Ω—Ç–æ–≤ –¥–ª—è fines_one
interest_one = 1 + full_igor_one / 100
result_one = fines_igor_one * interest_one

# –í—ã—á–∏—Å–ª–µ–Ω–∏–µ —Å—É–º–º—ã —Å —É—á–µ—Ç–æ–º –ø—Ä–æ—Ü–µ–Ω—Ç–æ–≤ –¥–ª—è fines_two
interest_two = 1 + full_igor_two / 100
result_two = fines_igor_two * interest_two

# –í—ã—á–∏—Å–ª–µ–Ω–∏–µ —Å—É–º–º—ã —Å —É—á–µ—Ç–æ–º –ø—Ä–æ—Ü–µ–Ω—Ç–æ–≤ –¥–ª—è fines_igor_three
interest_three = 1 + fines_igor_three / 100
result_three = fines_igor_three * interest_two

# –°–ª–æ–∂–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
result = reduce(
    lambda x, y: x + y,
    map(int, (result_one, result_two, result_three))
)

# –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –≤ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ
result, int_result_one, int_result_two, int_result_three = map(int, (result, result_one, result_two, result_three))

# –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —á–∏—Å–ª–∞ —Å –ø—Ä–æ–±–µ–ª–∞–º–∏
formatted_result = "{:,}".format(result).replace(",", " ")
formated_result_one = "{:,}".format(int_result_one).replace(",", " ")
formated_result_two = "{:,}".format(int_result_two).replace(",", " ")
formated_result_three = "{:,}".format(int_result_three).replace(",", " ")

igor_fines_account = f"üí∑ {formatted_result}"

# –°—É–º–º–∞ –≤—Å–µ—Ö —à—Ç—Ä–∞—Ñ–æ–≤
# –í—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
fines_igor = [8200, 6790, 10300, 36000, 1120, 840, 11750]

# –°–ª–æ–∂–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
all_fines = reduce(
	lambda c, b: c + b,
	fines_igor
)

# –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –≤ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ
all_fines = int(all_fines)

# –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —á–∏—Å–ª–∞ —Å –ø—Ä–æ–±–µ–ª–∞–º–∏
formatted_all_fines = "{:,}".format(all_fines).replace(",", " ")

igor_all_fines = f"üí∑ {formatted_all_fines}"

# –í—Å–µ–≥–æ—à —à—Ç—Ä–∞—Ñ–æ–≤ —É –í—è—á–µ—Å–ª–∞–≤–∞
# –í—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
fines_slava_one = 0
fines_slava_two = 0
full_slava_one = 0
full_slava_two = 0

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–Ω–∞—á–µ–Ω–∏—è full_one
if full_slava_one > 15:
    full_slava_one += 7

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–Ω–∞—á–µ–Ω–∏—è full_two
if full_slava_two > 15:
    full_slava_two += 7

# –í—ã—á–∏—Å–ª–µ–Ω–∏–µ —Å—É–º–º—ã —Å —É—á–µ—Ç–æ–º –ø—Ä–æ—Ü–µ–Ω—Ç–æ–≤ –¥–ª—è fines_one
interest_one_slava = 1 + full_slava_one / 100
result_one_slava = fines_slava_one * interest_one_slava

# –í—ã—á–∏—Å–ª–µ–Ω–∏–µ —Å—É–º–º—ã —Å —É—á–µ—Ç–æ–º –ø—Ä–æ—Ü–µ–Ω—Ç–æ–≤ –¥–ª—è fines_two
interest_two_slava = 1 + full_slava_two / 100
result_two_slava = fines_slava_two * interest_two_slava

# –°–ª–æ–∂–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
result_slava = result_one_slava + result_two_slava

# –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –≤ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ
result_slava = int(result_slava)

# –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —á–∏—Å–ª–∞ —Å –ø—Ä–æ–±–µ–ª–∞–º–∏
formatted_result_slava = "{:,}".format(result_slava).replace(",", " ")

slava_fines_account = f"üí∑ {formatted_result_slava}"

# –°—É–º–º–∞ –≤—Å–µ—Ö —à—Ç—Ä–∞—Ñ–æ–≤
# –í—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
fines_slava = [0, 0]

# –°–ª–æ–∂–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
all_fines_slava = reduce(
    lambda h, d: h + d,
    fines_slava
)

# –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –≤ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ
all_fines_slava = int(all_fines_slava)

# –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —á–∏—Å–ª–∞ —Å –ø—Ä–æ–±–µ–ª–∞–º–∏
formatted_all_fines_slava = "{:,}".format(all_fines_slava).replace(",", " ")

slava_all_fines = f"üí∑ {formatted_all_fines_slava}"

# –†–∞—Å—Å—á–µ—Ç ETH –≤ —Ä—É–±–ª—å –∏ –¥–æ–ª–ª–∞—Ä
def get_eth_to_usd_rate():
    url = "https://api.coingecko.com/api/v3/simple/price?ids=ethereum&vs_currencies=usd"
    response = requests.get(url)
    data = response.json()
    eth_to_usd_rate = data.get("ethereum", {}).get("usd")
    return eth_to_usd_rate

def get_eth_to_rub_rate():
    url = "https://api.coingecko.com/api/v3/simple/price?ids=ethereum&vs_currencies=rub"
    response = requests.get(url)
    data = response.json()
    eth_to_rub_rate = data.get("ethereum", {}).get("rub")
    return eth_to_rub_rate

def eth_to_usd(eth_amount, eth_to_usd_rate):
    usd_amount = eth_amount * eth_to_usd_rate
    return usd_amount


def eth_to_rub(eth_amount, eth_to_rub_rate):
    rub_amount = eth_amount * eth_to_rub_rate
    return rub_amount

# –ü–æ–ª—É—á–µ–Ω–∏–µ –∞–∫—Ç—É–∞–ª—å–Ω–æ–≥–æ –∫—É—Ä—Å–∞ ETH/USD —Å CoinGecko
current_eth_to_usd_rate = get_eth_to_usd_rate()
current_eth_to_rub_rate = get_eth_to_rub_rate()

# –ó–∞–º–µ–Ω–∏—Ç–µ —ç—Ç—É —Å—É–º–º—É –Ω–∞ –Ω—É–∂–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ ETH
amount_in_eth = 1.709

# –†–∞—Å—á–µ—Ç —ç–∫–≤–∏–≤–∞–ª–µ–Ω—Ç–∞ –≤ USD
usd_equivalent = eth_to_usd(amount_in_eth, current_eth_to_usd_rate)
rub_equivalent = eth_to_rub(amount_in_eth, current_eth_to_rub_rate)

# –ü–µ—Ä–µ–≤–æ–¥–∏–º –≤ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ —Ä—É–±–ª—å
int_rub_equivalent = int(rub_equivalent)

# –û–∫—Ä—É–≥–ª–µ–Ω–∏–µ –¥–æ –¥–≤—É—Ö –∑–Ω–∞–∫–æ–≤ –ø–æ—Å–ª–µ –∑–∞–ø—è—Ç–æ–π —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
usd_equivalent_formatted = "{:.2f}".format(usd_equivalent)
rub_equivalent_formatted = "{:,}".format(int_rub_equivalent).replace(",", " ")